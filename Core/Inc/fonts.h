/*
 * fonts.h
 *
 *  Created on: May 20, 2025
 *      Author: Jerem
 */

#ifndef INC_FONTS_H_
#define INC_FONTS_H_

uint8_t characters[] = {
		0b11110000,
		0b00101000,
		0b00101000,
		0b11110000,
		0b11111000,
		0b10101000,
		0b10101000,
		0b01010000,
		0b01110000,
		0b10001000,
		0b10001000,
		0b10001000,
		0b11111000,
		0b10001000,
		0b10001000,
		0b01110000,
		0b11111000,
		0b10101000,
		0b10101000,
		0b10001000,
		0b11111000,
		0b00101000,
		0b00101000,
		0b00001000,
		0b01110000,
		0b10001000,
		0b10101000,
		0b01100000,
		0b11111000,
		0b00100000,
		0b00100000,
		0b11111000,
		0b10001000,
		0b10001000,
		0b11111000,
		0b10001000,
		0b01001000,
		0b10001000,
		0b01111000,
		0b00001000,
		0b11111000,
		0b00100000,
		0b01010000,
		0b10001000,
		0b11111000,
		0b10000000,
		0b10000000,
		0b10000000,
		0b11111000,
		0b11111000,
		0b11111000,
		0b11111000,
		0b00100000,
		0b00100000,
		0b00100000,
		0b00100000,
		0b10000000,
		0b10000000,
		0b10000000,
		0b10000000,
		0b11111000,
		0b00101000,
		0b00101000,
		0b00010000,
		0b00010000,
		0b00101000,
		0b00101000,
		0b11111000,
		0b11111000,
		0b00101000,
		0b01101000,
		0b10010000,
		0b10010000,
		0b10101000,
		0b10101000,
		0b01001000,
		0b00001000,
		0b00001000,
		0b11111000,
		0b00001000,
		0b01111000,
		0b10000000,
		0b10000000,
		0b01111000,
		0b00000000,
		0b00111000,
		0b11000000,
		0b00111000,
		0b00000000,
		0b10111100,
		0b00000000,
		0b00000000,
		0b11001000,
		0b00110000,
		0b00110000,
		0b11001000,
		0b00000000,
		0b00000000,
		0b10000000,
		0b01100000,
		0b10001000,
		0b11001000,
		0b10101000,
		0b10011000,
		0b01111000,
		0b10000100,
		0b10000100,
		0b01111000,
		0b10000000,
		0b10001000,
		0b11111100,
		0b10000000,
		0b11001000,
		0b10100100,
		0b10010100,
		0b10001000,
		0b10000100,
		0b10010100,
		0b10010100,
		0b01111000,
		0b00111100,
		0b00100000,
		0b11111100,
		0b00100000,
		0b10011100,
		0b10010100,
		0b10010100,
		0b01100100,
		0b01111000,
		0b10010100,
		0b10010100,
		0b01100000,
		0b10000100,
		0b01100100,
		0b00010100,
		0b00001100,
		0b01101000,
		0b10010100,
		0b10010100,
		0b01101000,
		0b00001000,
		0b10010100,
		0b10010100,
		0b11111100,
		0b00000000,
		0b11000000,
		0b11000000,
		0b00000000,
		0b00000100,
		0b00000010,
		0b10110010,
		0b00010010,
		0b00001100,
		0b00000000,
		0b11001100,
		0b11001100,
		0b00000000,
		0b11110000,
		0b00001000,
		0b11110000,
		0b00001000,
		0b11110000,
		0b01111000,
		0b10000000,
		0b01111000,
		0b10000000,
		0b01111000,
		0b00001000,
		0b00010000,
		0b11100000,
		0b00010000,
		0b00001000,
		0b11111000,
		0b00010000,
		0b00100000,
		0b01000000,
		0b11111000,
		0b01110000,
		0b10001000,
		0b10001000,
		0b10001000,
		0b01110000,
		0b01000100,
		0b01101100,
		0b00111000,
		0b00010000,
		0b00010000,
		0b00111000,
		0b01101100,
		0b01000100,
		0b11000000,
		0b00110000,
		0b00001100,
		0b00000011,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

};

unsigned int getCharacterPhysicalWidth(char c) {
	const char big_characters[] = "WwmMyYnNoO";
	for (unsigned int i = 0; i < sizeof(big_characters); i++) if (big_characters[i] == c) return 5;
	if (c == ' ') return 3;
	return 4;
}

uint8_t* getCharacterPixels(char c) {
	if (isalnum(c)) {
		if (c == 'M' || c == 'm') return characters + 157;
		if (c == 'W' || c == 'w') return characters + 162;
		if (c == 'y' || c == 'Y') return characters + 167;
		if (c == 'n' || c == 'N') return characters + 172;
		if (c == 'o' || c == 'O') return characters + 177;

		unsigned int index = (c >= 'a') ? (c - 'a') : (c - 'A');
		if (c <= '9') index = 26 + (c - '0');

		return characters + index * 4;
	}
	if (c == ',') {
		return characters + 96;
	}
	if (c == '!') {
		return characters + 88;
	}

	if (c == '.')  {
		return characters + 144;
	}

	if (c == '>') {
		return characters + 182;
	}

	if (c == '<') return characters + 186;
	if (c == '/') return characters + 190;

	if (c == ':') return characters + 153;

	if (c == ' ' || c == '\t' || c == '\n' || c == '\r' || c == '\b') return characters + 194;

	return characters + 48;
}

#endif /* INC_FONTS_H_ */
